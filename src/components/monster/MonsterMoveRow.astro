---
import { routes } from 'constants/route';
import type { IMove, IMoveEnhanced } from 'contracts/move';
import { imgUrl } from 'helpers/urlHelper';

interface Props {
  locale: string;
  source?: string;
  data: IMoveEnhanced;
}

const { locale, source, data } = Astro.props;

const linkToMove = `/${locale}${routes.moves}/${encodeURI(data.id.toString())}.html`;
---

<tr class="move no-padding">
  <td class="star ta-center">{source}</td>
  <td class="type">
    <a href={linkToMove} title={data.name_localised}>
      {
        data.elemental_types_elements.length > 0 ? (
          data.elemental_types_elements.map((elem) => (
            <img
              src={imgUrl(elem.icon?.path)}
              class="move-image"
              alt={`image of ${elem.name_localised}`}
              draggable="false"
            />
          ))
        ) : (
          <img
            src="/assets/img/typeless.png"
            class="move-image"
            title="Typeless"
            alt="image of typeless"
            draggable="false"
          />
        )
      }
    </a>
  </td>
  <td class="name">
    <a href={linkToMove} title={data.name_localised}>
      {data.name_localised}
    </a>
  </td>
  <td class="category">
    <a href={linkToMove} title={data.name_localised}>
      {data.category_name_localised}
    </a>
  </td>
  <td class="power">
    <a href={linkToMove} title={data.name_localised}>
      {data.power ? data.power : ' - '}
    </a>
  </td>
  <td class="accuracy">
    <a href={linkToMove} title={data.name_localised}>
      {data.accuracy}%
    </a>
  </td>
  <td class="ap">
    <a href={linkToMove} title={data.name_localised}>
      {data.cost}
    </a>
  </td>
</tr>
