---
import LazyImage from 'components/common/LazyImage.astro';

import { routes } from 'constants/route';
import type { ISubResourceMonsterEnhanced } from 'contracts/subResource';
import { imgUrl } from 'helpers/urlHelper';

interface Props {
  locale: string;
  fromOrTo?: string;
  data: ISubResourceMonsterEnhanced;
}

const { locale, fromOrTo, data } = Astro.props;

const linkToMonster = `/${locale}${routes.monsters}/${encodeURI(data.resource_name ?? '')}.html`;
---

<tr class="remaster no-padding">
  <td class="from-to">{fromOrTo ?? ''}</td>
  <td class="sprite">
    <a href={linkToMonster} title={data.name_localised}>
      <LazyImage
        src={imgUrl(data.icon_url)}
        classes="remaster-image"
        alt={`${data.name_localised}`}
      />
    </a>
  </td>
  <td class="name">
    <a href={linkToMonster} title="{data.name_localised}">
      {data.name_localised}
      (<small class="beast-id">#{data.bestiary_index_with_padding}</small>)
    </a>
  </td>
  <td class="type">
    <a href={linkToMonster} title={data.name_localised}>
      {
        data.elemental_types_elements.map((elem) => (
          <LazyImage
            src={imgUrl(elem.icon?.path)}
            classes="move-image"
            alt={`${elem.name_localised}`}
          />
        ))
      }

      {
        data.elemental_types_elements.length == 0 && (
          <LazyImage
            src="/assets/img/typeless.png"
            classes="move-image"
            alt={`${data.name_localised}`}
          />
        )
      }
    </a>
  </td>
  <td class="specialisation">
    {
      (data.specialization_localised ?? []).length > 0 ? (
        <a href={linkToMonster} title={data.name_localised} class="ml-1">
          {data.specialization_localised}
        </a>
      ) : (
        data.required_move_move != null && (
          <a
            href={`/${locale}${routes.monsters}/${encodeURI(data.required_move_move.id)}`}
            title={data.required_move_move.name_localised}
            class="ml-1"
          >
            {data.required_move_move.name_localised}
          </a>
        )
      )
    }
  </td>
</tr>
